services:
  app:
    build:
      context: ..
      args:
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    command: fastapi dev app/main.py --host 0.0.0.0 --port 8000
    environment:
      - AWS_COGNITO_SECRET_NAME=${AWS_COGNITO_SECRET_NAME}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - BUCKET_NAME=${BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    volumes:
      - ..:/src
    ports:
      - "8000:8000"
    restart: always
    networks:
      - app-network
  db:
    image: postgres:17.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./test-db-data:/var/lib/postgresql/data
    networks:
      - app-network
#  prometheus:
#    image: prom/prometheus:v3.4.2
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    restart: always
#    networks:
#      - app-network
#  grafana:
#    image: grafana/grafana:12.0.2
#    environment:
#      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
#      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
#      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./grafana-data:/var/lib/grafana
#    networks:
#      - app-network

volumes:
  test-db-data:
    driver: local
  grafana-data:
    driver: local
  app-data:
    driver: local

networks:
  app-network:
    driver: bridge
